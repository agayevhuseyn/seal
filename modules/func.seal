/* Math Module
 * Provides core functional-programming functions
 * Includes symbols: map, filter, reduce
 *
 * Author: Huseyn Aghayev
 * Language: Seal
 * Created: 2025-07-06
 */

define map(func, list)
    res = []
    for item in list
        push(res, func(item))

    return res


define filter(func, list)
    res = []
    for item in list
        if func(item)
            push(res, item)

    return res


define reduce(func, list, init)
    acc = init
    for item in list
        acc = func(acc, item)

    return acc


define any(func, list)
    i = 0
    while i < len(list)
        if func(list[i])
            return true

        i += 1

    return false


define all(func, list)
    i = 0
    while i < len(list)
        if not func(list[i])
            return false

        i += 1

    return true


define sorted(func, list)
    res = []
    for item in list
        push(res, item) // copy the list

    i = 0
    while i < len(res)
        j = i + 1
        while j < len(res)
            if func(res[j], res[i])
                temp = res[i]
                res[i] = res[j]
                res[j] = temp

            j += 1

        i += 1

    return res
